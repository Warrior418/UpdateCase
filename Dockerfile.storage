# Используем минимальный образ для экономии памяти
FROM golang:1.21-alpine AS builder

# Устанавливаем необходимые пакеты
RUN apk add --no-cache git ca-certificates tzdata

# Создаем пользователя для безопасности
RUN adduser -D -s /bin/sh storageuser

# Устанавливаем рабочую директорию
WORKDIR /app

# Копируем go mod файлы
COPY go.mod go.sum ./

# Загружаем зависимости
RUN go mod download

# Копируем исходный код
COPY . .

# Собираем приложение для memory storage
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o memory-storage-app ./cmd/storage/memory_server.go

# Финальный образ
FROM alpine:latest

# Устанавливаем необходимые пакеты
RUN apk --no-cache add ca-certificates tzdata

# Создаем пользователя
RUN adduser -D -s /bin/sh storageuser

# Устанавливаем рабочую директорию
WORKDIR /app

# Копируем бинарный файл
COPY --from=builder /app/memory-storage-app .

# Устанавливаем права
RUN chown -R storageuser:storageuser /app

# Переключаемся на пользователя
USER storageuser

# Открываем порт
EXPOSE 8081

# Запускаем приложение
CMD ["./memory-storage-app"]
